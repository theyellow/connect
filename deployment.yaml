---
kind: Namespace
apiVersion: v1
metadata:
  name: cr-connect-bot
  labels:
    name: cr-connect-bot
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cr-connect-bot-worker-deployment
  namespace: cr-connect-bot
  labels:
    app: cr-connect-bot-deployment
spec:
  replicas: 2
  selector:
    matchLabels:
      app: cr-connect-bot
  template:
    metadata:
      name: cr-connect-bot
      namespace: cr-connect-bot
      labels:
        app: cr-connect-bot
        department: bots
    spec:
      containers:
        - name: cr-connect-worker-container
          image: ghcr.io/theyellow/connect:master
          imagePullPolicy: Always
          envFrom:
            - secretRef:
                name: cr-connect-bot-secrets
          ports:
            - containerPort: 8080
          command: [ "java", "-Xmx300m", "-jar", "/cr-connect-bot.jar" ]
---
apiVersion: apps/v1
kind: Deployment
metadata:
    name: cr-connect-bot-leader-deployment
    namespace: cr-connect-bot
    labels:
        app: cr-connect-bot-leader-deployment
spec:
    replicas: 1
    selector:
        matchLabels:
            app: cr-connect-bot-leader
    template:
        metadata:
          name: cr-connect-bot-leader
          namespace: cr-connect-bot
          labels:
             app: cr-connect-bot-leader
             department: bots
        spec:
           containers:
            -  name: cr-connect-leader-container
               image: ghcr.io/theyellow/connect:master
               imagePullPolicy: Always
               envFrom:
                   - secretRef:
                       name: cr-connect-bot-secrets
               ports:
                   - containerPort: 8080
               command: [ "java", "-Xmx300m", "-jar", "/cr-connect-bot.jar", "discord4j.connect.ExampleSingleConnect" ]
---
apiVersion: apps/v1
kind: Deployment
metadata:
    name: cr-connect-rsocket-leader-deployment
    namespace: cr-connect-bot
    labels:
        app: cr-connect-rsocket-leader-deployment
spec:
    replicas: 1
    selector:
      matchLabels:
         app: cr-connect-rsocket-leader
    template:
      metadata:
         name: cr-connect-rsocket-leader
         namespace: cr-connect-bot
         labels:
            app: cr-connect-rsocket-leader
            department: bots
      spec:
        containers:
          - name: cr-connect-rsocket-leader-container
            image: ghcr.io/theyellow/connect:master
            imagePullPolicy: Always
            envFrom:
              - secretRef:
                  name: cr-connect-bot-secrets
            ports:
              - containerPort: 8080
            command: [ "java", "-Xmx300m", "-jar", "/cr-connect-bot.jar", "discord4j.connect.rsocket.shared.ExampleRSocketLeader" ]
---
apiVersion: apps/v1
kind: Deployment
metadata:
    name: cr-connect-rsocket-worker-deployment
    namespace: cr-connect-bot
    labels:
        app: cr-connect-rsocket-worker-deployment
spec:
    replicas: 1
    selector:
      matchLabels:
         app: cr-connect-rsocket-worker
    template:
      metadata:
         name: cr-connect-rsocket-worker
         namespace: cr-connect-bot
         labels:
           app: cr-connect-rsocket-worker
           department: bots
      spec:
        containers:
          - name: cr-connect-rsocket-worker-container
            image: ghcr.io/theyellow/connect:master
            imagePullPolicy: Always
            envFrom:
             - secretRef:
                 name: cr-connect-bot-secrets
            ports:
              - containerPort: 8080
            command: [ "java", "-Xmx300m", "-jar", "/cr-connect-bot.jar", "discord4j.connect.rsocket.shared.ExampleRSocketWorker" ]
---
apiVersion: v1
kind: Service
metadata:
  name: cr-connect-bot-service
  namespace: cr-connect-bot
spec:
  selector:
    app: cr-connect-bot
    department: bots
  type: NodePort
  ports:
    - port: 6379
      nodePort: 31379
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: cr-connect-bot-redis-config
  namespace: cr-connect-bot
data:
  redis-config: |
    maxmemory 2mb
    maxmemory-policy allkeys-lru
---
apiVersion: v1
kind: Pod
metadata:
  name: redis-connect
  namespace: cr-connect-bot
spec:
  containers:
    - name: redis-connect
      image: redis:5.0.4
      command:
        - redis-server
        - "/redis-master/redis.conf"
      env:
        - name: MASTER
          value: "true"
      ports:
        - containerPort: 6379
      resources:
        limits:
          cpu: "0.1"
      volumeMounts:
        - mountPath: /redis-master-data
          name: data
        - mountPath: /redis-master
          name: config
  volumes:
    - name: data
      emptyDir: {}
    - name: config
      configMap:
        name: cr-connect-bot-redis-config
        items:
          - key: redis-config
            path: redis.conf
---
